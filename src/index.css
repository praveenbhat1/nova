@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* NOVA color palette - cinematic gradients */
    --indigo: 243 75% 59%;
    --indigo-light: 243 75% 75%;
    --indigo-dark: 243 75% 35%;
    
    --violet: 270 70% 60%;
    --violet-light: 270 70% 75%;
    --violet-dark: 270 70% 40%;
    
    --rose: 330 81% 60%;
    --rose-light: 330 81% 75%;
    --rose-dark: 330 81% 40%;
    
    /* Base colors - dark mode default */
    --background: 240 10% 8%;
    --foreground: 240 10% 98%;
    
    --card: 240 10% 10%;
    --card-foreground: 240 10% 98%;
    
    --popover: 240 10% 12%;
    --popover-foreground: 240 10% 98%;
    
    --primary: 243 75% 59%;
    --primary-foreground: 240 10% 10%;
    
    --secondary: 270 70% 60%;
    --secondary-foreground: 240 10% 98%;
    
    --accent: 330 81% 60%;
    --accent-foreground: 240 10% 98%;
    
    --muted: 240 10% 20%;
    --muted-foreground: 240 5% 65%;
    
    --destructive: 0 84% 60%;
    --destructive-foreground: 240 10% 98%;
    
    --border: 240 10% 18%;
    --input: 240 10% 18%;
    --ring: 243 75% 59%;
    
    --radius: 0.75rem;
    
    /* Glassmorphic effects */
    --glass-bg: 240 10% 12%;
    --glass-border: 240 10% 25%;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--indigo)) 0%, hsl(var(--violet)) 50%, hsl(var(--rose)) 100%);
    --gradient-glow: linear-gradient(135deg, hsl(var(--indigo-light)) 0%, hsl(var(--violet-light)) 50%, hsl(var(--rose-light)) 100%);
    --gradient-subtle: linear-gradient(180deg, hsl(var(--background)) 0%, hsl(240 10% 6%) 100%);
    
    --sidebar-background: 240 10% 8%;
    --sidebar-foreground: 240 10% 90%;
    --sidebar-primary: 243 75% 59%;
    --sidebar-primary-foreground: 240 10% 10%;
    --sidebar-accent: 240 10% 15%;
    --sidebar-accent-foreground: 240 10% 98%;
    --sidebar-border: 240 10% 18%;
    --sidebar-ring: 243 75% 59%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
    background: linear-gradient(180deg, hsl(240 10% 8%) 0%, hsl(240 10% 4%) 100%);
  }
  
  /* Glassmorphic card */
  .glass-card {
    @apply bg-card/40 backdrop-blur-xl border border-white/10 shadow-2xl;
  }
  
  /* Gradient text */
  .gradient-text {
    @apply bg-clip-text text-transparent;
    background-image: var(--gradient-primary);
  }
  
  /* Gradient border */
  .gradient-border {
    position: relative;
    background: hsl(var(--card));
  }
  
  .gradient-border::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: var(--gradient-primary);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
  
  /* Glow effect */
  .glow {
    box-shadow: 0 0 40px hsl(var(--indigo) / 0.3);
  }
  
  /* Typing indicator animation */
  @keyframes typing-dot {
    0%, 60%, 100% { opacity: 0.3; }
    30% { opacity: 1; }
  }
  
  .typing-dot {
    animation: typing-dot 1.4s infinite;
  }
  
  .typing-dot:nth-child(2) {
    animation-delay: 0.2s;
  }
  
  .typing-dot:nth-child(3) {
    animation-delay: 0.4s;
  }
}
